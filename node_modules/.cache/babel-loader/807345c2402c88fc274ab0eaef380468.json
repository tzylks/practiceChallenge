{"ast":null,"code":"import _toConsumableArray from\"/Users/trevorzylks/Development/code/module5/practiceInterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/trevorzylks/Development/code/module5/practiceInterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import sampleData from'./mock_data';import{createSelector}from'reselect';import memoize from'lodash.memoize';var initialState=_objectSpread({},sampleData);export var MERGE_SESSION='app/MERGE_SESSION';export var ADD_CONTRIBUTION='app/ADD_CONTRIBUTION';//- Redux\nexport var app=function app(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case MERGE_SESSION:{var session=_objectSpread(_objectSpread({},state.session),payload);return _objectSpread(_objectSpread({},state),{},{session:session});}case ADD_CONTRIBUTION:{var user=state.session.user;var contributions=state.contributions;var amount=formatAmount(payload.amount);var balance=user.balance-amount;var date=new Date().toJSON();// Construct new contribution\nvar contribution={id:contributions.length+1,amount:amount,campaignId:payload.campaignId,date:date,message:payload.message,userId:user.id};// Update user balance (deep copy)\nvar _session=Object.assign({},state.session,{user:_objectSpread(_objectSpread({},user),{},{balance:balance})});return _objectSpread(_objectSpread({},state),{},{session:_objectSpread(_objectSpread({},state.session),_session),contributions:[].concat(_toConsumableArray(contributions),[contribution])});}default:{return state;}}};//- Utility Methods\nfunction formatAmount(amount){return parseFloat(Number(amount).toFixed(2));}function filterContributions(contributions,campaignId){return contributions.reduce(function(array,contribution){if(contribution.campaignId!==campaignId){return array;}return[].concat(_toConsumableArray(array),[contribution]);},[]);}function calculateContributionsTotal(contributions){return contributions.reduce(function(total,_ref){var amount=_ref.amount;return total+amount;},0);}//- Actions\nexport var selectCampaignById=function selectCampaignById(campaignId){return{type:MERGE_SESSION,payload:{selectedCampaignId:campaignId}};};export var addContribution=function addContribution(amount,message,campaignId){return{type:ADD_CONTRIBUTION,payload:{amount:amount,message:message,campaignId:campaignId}};};//- Selectors\n// Session\nexport var getSelectedCampaignId=function getSelectedCampaignId(state){return state.app.session.selectedCampaignId;};export var getSessionUser=function getSessionUser(state){return state.app.session.user;};// Contributions\nvar getContributions=function getContributions(state){return state.app.contributions;};export var makeGetCampaignContributionsTotal=createSelector(getContributions,function(contributions){return memoize(function(){console.log(\"Reselect.getCampaignContributionsTotal\");return calculateContributionsTotal(contributions);});});export var makeGetCampaignContributionsCount=createSelector(getContributions,function(contributions){return memoize(function(){console.log(\"Reselect.getCampaignContributionsCount\");return contributions.length;});});export var makeGetCampaignContributionsSorted=createSelector(getContributions,function(contributions){return memoize(function(campaignId){console.log(\"Reselect.getCampaignContributionsSorted\",campaignId);return filterContributions(contributions,campaignId).sort(function(a,b){return b.date>a.date?1:-1;});});});export var makeGetCampaignContributionsTotalById=createSelector(getContributions,function(contributions){return memoize(function(campaignId){console.log(\"Reselect.getCampaignContributionsTotalById\",campaignId);return filterContributions(contributions,campaignId).reduce(function(total,_ref2){var amount=_ref2.amount;return total+amount;},0);});});// Campaigns\nvar getCampaigns=function getCampaigns(state){return state.app.campaigns;};export var makeGetCampaignsCount=createSelector(getCampaigns,function(campaigns){return memoize(function(){console.log(\"Reselect.getCampaignsCount\");return campaigns.length;});});export var makeGetCampaignsSorted=createSelector(getCampaigns,getContributions,function(campaigns,contributions){return memoize(function(){console.log(\"Reselect.getCampaignsSorted\");return campaigns.reduce(function(array,campaign){var filteredContributions=filterContributions(contributions,campaign.id);var total=calculateContributionsTotal(filteredContributions);var progress=total/campaign.goal;return[].concat(_toConsumableArray(array),[_objectSpread(_objectSpread({},campaign),{},{progress:progress})]);},[]).sort(function(a,b){return b.progress>a.progress?1:-1;});});});export var makeGetCampaignById=createSelector(getCampaigns,function(campaigns){return memoize(function(campaignId){console.log(\"Reselect.getCampaignById\",campaignId);return campaigns.find(function(campaign){return campaign.id===campaignId;});});});// Users\nvar getUsers=function getUsers(state){return state.app.users;};export var makeGetUsersCount=createSelector(getUsers,function(users){return memoize(function(){console.log(\"Reselect.getUsersCount\");return users.length;});});export var makeGetUserById=createSelector(getUsers,function(users){return memoize(function(userId){console.log(\"Reselect.getUserById\",userId);return users.find(function(user){return user.id===userId;});});});","map":{"version":3,"sources":["/Users/trevorzylks/Development/code/module5/practiceInterview/src/modules/index.js"],"names":["sampleData","createSelector","memoize","initialState","MERGE_SESSION","ADD_CONTRIBUTION","app","state","action","type","payload","session","user","contributions","amount","formatAmount","balance","date","Date","toJSON","contribution","id","length","campaignId","message","userId","Object","assign","parseFloat","Number","toFixed","filterContributions","reduce","array","calculateContributionsTotal","total","selectCampaignById","selectedCampaignId","addContribution","getSelectedCampaignId","getSessionUser","getContributions","makeGetCampaignContributionsTotal","console","log","makeGetCampaignContributionsCount","makeGetCampaignContributionsSorted","sort","a","b","makeGetCampaignContributionsTotalById","getCampaigns","campaigns","makeGetCampaignsCount","makeGetCampaignsSorted","campaign","filteredContributions","progress","goal","makeGetCampaignById","find","getUsers","users","makeGetUsersCount","makeGetUserById"],"mappings":"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","sourcesContent":["import sampleData from './mock_data'\n\nimport { createSelector } from 'reselect'\nimport memoize from 'lodash.memoize'\n\nconst initialState = { ...sampleData }\n\nexport const MERGE_SESSION = 'app/MERGE_SESSION'\nexport const ADD_CONTRIBUTION = 'app/ADD_CONTRIBUTION'\n\n//- Redux\n\nexport const app = (state = initialState, action) => {\n\tconst { type, payload } = action\n\n\tswitch (type) {\n\t\tcase MERGE_SESSION: {\n\t\t\tconst session = { ...state.session, ...payload }\n\n\t\t\treturn { ...state, session }\n\t\t}\n\n\t\tcase ADD_CONTRIBUTION: {\n\t\t\tconst { user } = state.session\n\t\t\tconst contributions = state.contributions\n\n\t\t\tconst amount = formatAmount(payload.amount)\n\t\t\tconst balance = user.balance - amount\n\t\t\tconst date = (new Date()).toJSON()\n\n\t\t\t// Construct new contribution\n\t\t\tconst contribution = {\n\t\t\t\tid:\tcontributions.length + 1,\n\t\t\t\tamount,\n\t\t\t\tcampaignId: payload.campaignId,\n\t\t\t\tdate,\n\t\t\t\tmessage: payload.message,\n\t\t\t\tuserId: user.id\n\t\t\t}\n\n\t\t\t// Update user balance (deep copy)\n\t\t\tconst session = Object.assign({}, state.session, {user: {...user, balance}})\n\n\t\t\treturn {...state, session: {...state.session, ...session}, contributions: [...contributions, contribution]}\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n\n//- Utility Methods\n\nfunction formatAmount(amount) {\n\treturn parseFloat(Number(amount).toFixed(2))\n}\n\nfunction filterContributions(contributions, campaignId){\n\treturn contributions.reduce((array, contribution) => {\n\t\tif (contribution.campaignId !== campaignId) {\n\t\t\treturn array\n\t\t}\n\n\t\treturn [...array, contribution]\n\t}, [])\n}\n\nfunction calculateContributionsTotal(contributions){\n\treturn contributions.reduce((total, { amount }) => {\n\t\treturn (total + amount)\n\t}, 0)\n}\n\n//- Actions\n\nexport const selectCampaignById = campaignId => {\n\treturn {\n\t\ttype: MERGE_SESSION,\n\t\tpayload: { selectedCampaignId: campaignId }\n\t}\n}\n\nexport const addContribution = (amount, message, campaignId) => {\n\treturn {\n\t\ttype: ADD_CONTRIBUTION,\n\t\tpayload: {\n\t\t\tamount, message, campaignId\n\t\t}\n\t}\n}\n\n//- Selectors\n\n// Session\nexport const getSelectedCampaignId = state => {\n\treturn state.app.session.selectedCampaignId\n}\n\nexport const getSessionUser = state => {\n\treturn state.app.session.user\n}\n\n// Contributions\nconst getContributions = state => {\n\treturn state.app.contributions\n}\n\nexport const makeGetCampaignContributionsTotal = createSelector(\n\tgetContributions,\n\tcontributions => memoize(\n\t\t() => {\n\t\t\tconsole.log(\"Reselect.getCampaignContributionsTotal\")\n\t\t\treturn calculateContributionsTotal(contributions)\n\t\t}\n\t)\n)\n\nexport const makeGetCampaignContributionsCount = createSelector(\n\tgetContributions,\n\tcontributions => memoize(\n\t\t() => {\n\t\t\tconsole.log(\"Reselect.getCampaignContributionsCount\")\n\t\t\treturn contributions.length\n\t\t}\n\t)\n)\n\nexport const makeGetCampaignContributionsSorted = createSelector(\n\tgetContributions,\n\tcontributions => memoize(\n\t\tcampaignId => {\n\t\t\tconsole.log(\"Reselect.getCampaignContributionsSorted\", campaignId)\n\t\t\treturn filterContributions(contributions, campaignId).sort((a, b) => {\n\t\t\t\treturn (b.date > a.date) ? 1 : -1\n\t\t\t})\n\t\t}\n\t)\n)\n\nexport const makeGetCampaignContributionsTotalById = createSelector(\n\tgetContributions,\n\tcontributions => memoize(\n\t\tcampaignId => {\n\t\t\tconsole.log(\"Reselect.getCampaignContributionsTotalById\", campaignId)\n\t\t\treturn filterContributions(contributions, campaignId).reduce((total, { amount }) => {\n\t\t\t\treturn (total + amount)\n\t\t\t}, 0)\n\t\t}\n\t)\n)\n\n// Campaigns\nconst getCampaigns = state => {\n\treturn state.app.campaigns\n}\n\nexport const makeGetCampaignsCount = createSelector(\n\tgetCampaigns,\n\tcampaigns => memoize(\n\t\t() => {\n\t\t\tconsole.log(\"Reselect.getCampaignsCount\")\n\t\t\treturn campaigns.length\n\t\t}\n\t)\n)\n\nexport const makeGetCampaignsSorted = createSelector(\n\tgetCampaigns,\n\tgetContributions,\n\t(campaigns, contributions) => memoize(\n\t\t() => {\n\t\t\tconsole.log(\"Reselect.getCampaignsSorted\")\n\t\t\treturn campaigns.reduce((array, campaign) => {\n\t\t\t\tconst filteredContributions = filterContributions(contributions, campaign.id)\n\t\t\t\tconst total = calculateContributionsTotal(filteredContributions)\n\t\t\t\tconst progress = total / campaign.goal\n\t\t\t\treturn [...array, {...campaign, progress}]\n\t\t\t}, [])\n\t\t\t.sort((a, b) => {\n\t\t\t\treturn (b.progress > a.progress) ? 1 : -1\n\t\t\t})\n\t\t}\n\t)\n)\n\nexport const makeGetCampaignById = createSelector(\n\tgetCampaigns,\n\tcampaigns => memoize(\n\t\tcampaignId => {\n\t\t\tconsole.log(\"Reselect.getCampaignById\", campaignId)\n\t\t\treturn campaigns.find(campaign => campaign.id === campaignId)\n\t\t}\n\t)\n)\n\n// Users\nconst getUsers = state => {\n\treturn state.app.users\n}\n\nexport const makeGetUsersCount = createSelector(\n\tgetUsers,\n\tusers => memoize(\n\t\t() => {\n\t\t\tconsole.log(\"Reselect.getUsersCount\")\n\t\t\treturn users.length\n\t\t}\n\t)\n)\n\nexport const makeGetUserById = createSelector(\n\tgetUsers,\n\tusers => memoize(\n\t\tuserId => {\n\t\t\tconsole.log(\"Reselect.getUserById\", userId)\n\t\t\treturn users.find(user => user.id === userId)\n\t\t}\n\t)\n)\n"]},"metadata":{},"sourceType":"module"}